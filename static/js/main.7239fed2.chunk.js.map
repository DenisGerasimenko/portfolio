{"version":3,"sources":["common/components/title/Title.module.scss","header/Header.module.scss","contacts/Contacts.module.scss","main/Main.module.scss","skills/skill/Skill.module.scss","Projects/Project/Project.module.scss","header/burgerNav/BurgerNav.module.scss","footer/Footer.module.scss","header/nav/Nav.module.scss","main/Main.js","skills/skill/Skill.js","common/components/title/Title.js","skills/Skills.js","Projects/Project/Project.js","Projects/Projects.js","footer/Footer.js","header/nav/Nav.js","header/burgerNav/BurgerNav.js","header/Header.js","common/components/button/Button.js","contacts/Contacts.js","App.tsx","serviceWorker.ts","index.tsx","skills/Skills.module.scss","Projects/Projects.module.scss","common/components/button/Button.module.scss"],"names":["module","exports","particlesOptions","particles","number","value","density","enable","value_area","Main","className","styles","mainBlock","params","top","container","greeting","text","options","max","photo","image","Skill","props","skill","imgWrap","src","skillIcon","icon","skillInfo","skillTitle","title","description","Title","style","Skills","id","skillsBlock","skills","Project","project","href","items","viewBtn","projectInfo","projectTitle","Projects","social","backgroundImage","cards","list","projectsBlock","projects","Footer","footer","socialIcons","socialIcon","alt","copyright","Nav","nav","activeClass","active","to","spy","smooth","offset","duration","BurgerNav","useState","menuIsOpen","setBurgerMenu","burgerNav","burgerNavItems","show","onClick","console","log","burgerBtn","Header","header","Button","disabled","type","btn","Contacts","name","email","message","formData","setFormData","isSubmitting","setIsSubmitting","submitStatus","setSubmitStatus","handleInputChange","e","target","prev","handleSubmit","a","preventDefault","test","web3FormData","FormData","append","fetch","method","body","web3Response","json","web3Result","success","setTimeout","error","formsubmitData","formsubmitResponse","ok","status","getformData","formspreeData","warn","subject","mailtoLink","encodeURIComponent","window","open","contactsBlock","form","onSubmit","formArea","placeholder","onChange","required","messageArea","statusMessage","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"6GACAA,EAAOC,QAAU,CAAC,MAAQ,uB,oBCA1BD,EAAOC,QAAU,CAAC,OAAS,yB,qGCA3BD,EAAOC,QAAU,CAAC,IAAM,sBAAsB,cAAgB,gCAAgC,UAAY,4BAA4B,KAAO,uBAAuB,SAAW,2BAA2B,SAAW,2BAA2B,YAAc,8BAA8B,cAAgB,gCAAgC,MAAQ,wBAAwB,QAAU,4B,mBCAtXD,EAAOC,QAAU,CAAC,UAAY,wBAAwB,UAAY,wBAAwB,UAAY,wBAAwB,SAAW,uBAAuB,MAAQ,oBAAoB,MAAQ,sB,mBCApMD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,QAAU,uBAAuB,KAAO,oBAAoB,UAAY,yBAAyB,WAAa,0BAA0B,YAAc,6B,mBCArMD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,uBAAuB,QAAU,yBAAyB,YAAc,6BAA6B,aAAe,8BAA8B,YAAc,+B,mBCA7ND,EAAOC,QAAU,CAAC,UAAY,6BAA6B,eAAiB,kCAAkC,OAAS,0BAA0B,KAAO,wBAAwB,UAAY,+B,mBCA5LD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,UAAY,0BAA0B,YAAc,4BAA4B,WAAa,2BAA2B,UAAY,4B,mBCAtLD,EAAOC,QAAU,CAAC,IAAM,iBAAiB,OAAS,sB,mLCM5CC,EAAmB,CACrBC,UAAW,CACPC,OAAQ,CACJC,MAAO,GACPC,QAAS,CACLC,QAAQ,EACRC,WAAY,QAmCbC,MA5Bf,WACI,OACI,yBAAKC,UAAWC,IAAOC,WACnB,kBAAC,IAAD,CAAWF,UAAWC,IAAOR,UAAWU,OAAQX,IAChD,kBAAC,IAAD,CAAMY,KAAG,GACL,yBAAKJ,UAAWC,IAAOI,WACnB,yBAAKL,UAAWC,IAAOK,UACnB,0CACA,4CAAiB,8CAEjB,kBAAC,IAAD,CACIC,KAAK,yBAGb,kBAAC,IAAD,CAAMP,UAAU,OAAOQ,QAAS,CAAEC,IAAM,KACpC,yBAAKT,UAAWC,IAAOS,OACnB,yBAAKV,UAAWC,IAAOU,c,kCChBpCC,MAhBf,SAAeC,GACX,OACI,yBAAKb,UAAWC,IAAOa,OACnB,yBAAKd,UAAWC,IAAOc,SACnB,yBAAKC,IAAKH,EAAMI,UAAWjB,UAAWC,IAAOiB,QAGjD,yBAAKlB,UAAWC,IAAOkB,WACvB,wBAAInB,UAAWC,IAAOmB,YAAaP,EAAMQ,OACzC,0BAAMrB,UAAWC,IAAOqB,aAAcT,EAAMS,gB,kBCDzCC,MAPf,SAAeV,GACX,OAAQ,wBAAIb,UAAWwB,IAAMH,OAAQR,EAAMN,OC0ChCkB,MAjCf,WAYI,OACI,yBAAKC,GAAG,SAAS1B,UAAWC,IAAO0B,aAC/B,yBAAK3B,UAAWC,IAAOI,WACnB,kBAAC,EAAD,CAAOE,KAAM,WACb,yBAAKP,UAAWC,IAAO2B,QACnB,kBAAC,EAAD,CAAOP,MAAO,KACPC,YAAa,+EACbL,UAxBX,0FAyBI,kBAAC,EAAD,CAAOI,MAAO,WACPC,YAAa,6EACbL,UA1BR,gFA2BC,kBAAC,EAAD,CAAOI,MAAO,QACPC,YAAa,6EACbL,UA5BT,oF,kCCOHY,MAff,SAAiBhB,GACb,OACI,yBAAKb,UAAWC,IAAO6B,SACnB,yBAAK9B,UAAWC,IAAOU,MAAOa,MAAOX,EAAMW,OACvC,uBAAGO,KAAMlB,EAAMmB,MAAQhC,UAAWC,IAAOgC,SAAzC,SAEJ,yBAAKjC,UAAWC,IAAOiC,aACvB,wBAAIlC,UAAWC,IAAOkC,cAAetB,EAAMQ,OAC3C,0BAAMrB,UAAWC,IAAOqB,aAAcT,EAAMS,gBC8CzCc,MA3Cf,WAEI,IAAMC,EAAS,CACXC,gBAAiB,8EAEfC,EAAQ,CACVD,gBAAiB,6EAEfE,EAAO,CACTF,gBAAiB,yEASrB,OACI,yBAAKZ,GAAG,WAAW1B,UAAWC,IAAOwC,eACjC,yBAAKzC,UAAWC,IAAOI,WACnB,kBAAC,EAAD,CAAOE,KAAM,aACb,yBAAKP,UAAWC,IAAOyC,UACnB,kBAAC,EAAD,CAASrB,MAAO,iBACPC,YAAa,+EACbE,MAAOa,EACPL,MAdN,uDAeH,kBAAC,EAAD,CAASX,MAAO,QACPC,YAAa,6EACbE,MAAOe,EACPP,MAhBP,4CAiBF,kBAAC,EAAD,CAASX,MAAO,WACPC,YAAa,6EACbE,MAAOgB,EACPR,MAlBR,qD,iBCHNW,MAnBf,WACI,OACI,yBAAK3C,UAAWC,IAAO2C,QACnB,yBAAK5C,UAAWC,IAAOI,WACnB,kBAAC,EAAD,CAAOE,KAAM,sBACb,yBAAKP,UAAWC,IAAO4C,aACnB,yBAAK7C,UAAWC,IAAO6C,YACvB,uBAAGf,KAAK,4DACJ,yBAAKf,IAVR,oFAU2B+B,IAAI,QAIpC,0BAAM/C,UAAWC,IAAO+C,WAAxB,4B,2CCoBDC,MArCf,WACI,OACI,yBAAKjD,UAAWwB,IAAM0B,KAClB,uBAAGnB,KAAK,IAAR,QAEA,kBAAC,OAAD,CACIoB,YAAa3B,IAAM4B,OACnBC,GAAG,SACHC,KAAK,EACLC,QAAQ,EACRC,OAAQ,EACRC,SAAU,KANd,UASA,kBAAC,OAAD,CACIN,YAAa3B,IAAM4B,OACnBC,GAAG,WACHC,KAAK,EACLC,QAAQ,EACRC,OAAQ,EACRC,SAAU,KANd,YASA,kBAAC,OAAD,CACIN,YAAa3B,IAAM4B,OACnBC,GAAG,WACHC,KAAK,EACLC,QAAQ,EACRC,OAAQ,EACRC,SAAU,KANd,c,yBCQGC,MA/Bf,WAAsB,IAAD,EACmBC,oBAAS,GAD5B,mBACVC,EADU,KACEC,EADF,KAOjB,OACI,yBAAK7D,UAAWwB,IAAMsC,WAClB,yBAAK9D,UAAW4D,EAAU,UAAMpC,IAAMuC,eAAZ,YAA8BvC,IAAMwC,MAASxC,IAAMuC,gBACzE,uBAAGhC,KAAK,IAAR,QACA,uBAAGA,KAAK,IAAR,UAEA,kBAAC,OAAD,CACIoB,YAAa3B,IAAM4B,OACnBC,GAAG,WACHC,KAAK,EACLC,QAAQ,EACRC,OAAQ,EACRC,SAAU,KANd,YAQA,uBAAG1B,KAAK,IAAR,aAGJ,yBAAKkC,QAtBU,WACnBJ,GAAeD,GACfM,QAAQC,IAAIP,IAoBwB5D,UAAWwB,IAAM4C,cCb9CC,MAVf,WACI,OACI,yBAAKrE,UAAWC,IAAOqE,QACnB,kBAAC,EAAD,MACA,kBAAC,EAAD,Q,2FCcGC,OAnBf,YAAuE,IAArDhE,EAAoD,EAApDA,KAAoD,IAA9CiE,gBAA8C,aAA5BC,YAA4B,MAArB,SAAqB,EAAR5D,EAAQ,2CAClE,MAAa,WAAT4D,GAAqB5D,EAAMoD,QAEvB,0CACIQ,KAAMA,EACNzE,UAAS,UAAKwB,KAAMkD,IAAX,YAAkBF,EAAWhD,KAAMgD,SAAW,IACvDA,SAAUA,GACN3D,GAEHN,GAMT,qCAAGwB,KAAK,GAAG/B,UAAWwB,KAAMkD,KAAS7D,GAAQN,ICoMtCoE,OAhNf,WAAqB,IAAD,EACgBhB,mBAAS,CACrCiB,KAAM,GACNC,MAAO,GACPC,QAAS,KAJG,mBACTC,EADS,KACCC,EADD,OAMwBrB,oBAAS,GANjC,mBAMTsB,EANS,KAMKC,EANL,OAOwBvB,mBAAS,IAPjC,mBAOTwB,EAPS,KAOKC,EAPL,KASVC,EAAoB,SAACC,GAAO,IAAD,EACLA,EAAEC,OAAlBX,EADqB,EACrBA,KAAMjF,EADe,EACfA,MACdqF,GAAY,SAAAQ,GAAI,sBACTA,EADS,eAEXZ,EAAOjF,QAIV8F,EAAY,uCAAG,WAAOH,GAAP,iCAAAI,EAAA,yDACjBJ,EAAEK,iBAGGZ,EAASH,MAASG,EAASF,OAAUE,EAASD,QAJlC,uBAKbM,EAAgB,6BALH,6BAUE,6BACHQ,KAAKb,EAASF,OAXb,uBAYbO,EAAgB,sCAZH,iCAgBjBF,GAAgB,GAChBE,EAAgB,cAjBC,WAqBPS,EAAe,IAAIC,UACZC,OAAO,aAAc,wCAClCF,EAAaE,OAAO,OAAQhB,EAASH,MACrCiB,EAAaE,OAAO,QAAShB,EAASF,OACtCgB,EAAaE,OAAO,UAAWhB,EAASD,SACxCe,EAAaE,OAAO,UAApB,iCAAyDhB,EAASH,OAClEiB,EAAaE,OAAO,YAAa,0BA3BpB,UA6BcC,MAAM,mCAAoC,CACjEC,OAAQ,OACRC,KAAML,IA/BG,eA6BPM,EA7BO,iBAkCYA,EAAaC,OAlCzB,WAkCPC,EAlCO,OAmCbnC,QAAQC,IAAI,sBAAuBkC,IAE/BA,EAAWC,QArCF,wBAsCTlB,EAAgB,yEAChBJ,EAAY,CAAEJ,KAAM,GAAIC,MAAO,GAAIC,QAAS,KAC5CI,GAAgB,GAChBqB,YAAW,kBAAMnB,EAAgB,MAAK,KAzC7B,2BA4CTlB,QAAQsC,MAAM,+BAAgCH,EAAWvB,SA5ChD,2DAgDbZ,QAAQsC,MAAM,2BAAd,MAhDa,0BAsDPC,EAAiB,IAAIX,UACZC,OAAO,OAAQhB,EAASH,MACvC6B,EAAeV,OAAO,QAAShB,EAASF,OACxC4B,EAAeV,OAAO,UAAtB,gBAA0ChB,EAASH,KAAnD,aAA4DG,EAASF,MAArE,0BAA4FE,EAASD,UACrG2B,EAAeV,OAAO,WAAtB,iCAA4DhB,EAASH,OACrE6B,EAAeV,OAAO,WAAY,SAClCU,EAAeV,OAAO,YAAa,SA5DtB,UA8DoBC,MAAM,oDAAqD,CACxFC,OAAQ,OACRC,KAAMO,IAhEG,aA8DPC,EA9DO,QAmEUC,GAnEV,wBAoETvB,EAAgB,0EAChBJ,EAAY,CAAEJ,KAAM,GAAIC,MAAO,GAAIC,QAAS,KAC5CI,GAAgB,GAChBqB,YAAW,kBAAMnB,EAAgB,MAAK,KAvE7B,2BA2EblB,QAAQC,IAAI,8BAA+BuC,EAAmBE,QA3EjD,mDA6Eb1C,QAAQsC,MAAM,oBAAd,MA7Ea,0BAkFPK,EAAc,IAAIf,UACZC,OAAO,OAAQhB,EAASH,MACpCiC,EAAYd,OAAO,QAAShB,EAASF,OACrCgC,EAAYd,OAAO,UAAWhB,EAASD,SArF1B,UAuFiBkB,MAAM,gCAAiC,CACjEC,OAAQ,OACRC,KAAMW,IAzFG,mBA4FOF,GA5FP,wBA6FTvB,EAAgB,iFAChBJ,EAAY,CAAEJ,KAAM,GAAIC,MAAO,GAAIC,QAAS,KAC5CI,GAAgB,GAChBqB,YAAW,kBAAMnB,EAAgB,MAAK,KAhG7B,8EAoGblB,QAAQsC,MAAM,iBAAd,MApGa,0BAyGPM,EAAgB,IAAIhB,UACZC,OAAO,OAAQhB,EAASH,MACtCkC,EAAcf,OAAO,QAAShB,EAASF,OACvCiC,EAAcf,OAAO,UAAWhB,EAASD,SACzCgC,EAAcf,OAAO,WAAYhB,EAASF,OAC1CiC,EAAcf,OAAO,WAArB,iCAA2DhB,EAASH,OA9GvD,UAgHmBoB,MAAM,kCAAmC,CACrEC,OAAQ,OACRC,KAAMY,IAlHG,mBAqHSH,GArHT,wBAsHTvB,EAAgB,6EAChBJ,EAAY,CAAEJ,KAAM,GAAIC,MAAO,GAAIC,QAAS,KAC5CI,GAAgB,GAChBqB,YAAW,kBAAMnB,EAAgB,MAAK,KAzH7B,+EA6HblB,QAAQsC,MAAM,mBAAd,MA7Ha,SAiIjBtC,QAAQ6C,KAAK,oDACPC,EAlIW,iCAkIyBjC,EAASH,MAC7CsB,EAnIW,6FAmIkFnB,EAASH,KAnI3F,oBAmI2GG,EAASF,MAnIpH,yBAmI0IE,EAASD,QAnInJ,8BAmIgLC,EAASH,MACpMqC,EApIW,qDAoIgDC,mBAAmBF,GApInE,iBAoIoFE,mBAAmBhB,IAExHiB,OAAOC,KAAKH,EAAY,UACxB7B,EAAgB,wGAChBJ,EAAY,CAAEJ,KAAM,GAAIC,MAAO,GAAIC,QAAS,KAE5CI,GAAgB,GAChBqB,YAAW,kBAAMnB,EAAgB,MAAK,KA3IrB,oFAAH,sDA8IlB,OACI,yBAAK1D,GAAG,WAAW1B,UAAWC,KAAOoH,eACjC,yBAAKrH,UAAWC,KAAOI,WACnB,kBAAC,EAAD,CAAOE,KAAM,aACb,kBAAC,IAAD,KACI,0BAAMP,UAAWC,KAAOqH,KAAMC,SAAU9B,GACpC,2BACIhB,KAAK,OACLG,KAAK,OACL5E,UAAWC,KAAOuH,SAClBC,YAAY,OACZ9H,MAAOoF,EAASH,KAChB8C,SAAUrC,EACVsC,UAAQ,IAEZ,2BACIlD,KAAK,QACLG,KAAK,QACL5E,UAAWC,KAAOuH,SAClBC,YAAY,SACZ9H,MAAOoF,EAASF,MAChB6C,SAAUrC,EACVsC,UAAQ,IAEZ,8BACI/C,KAAK,UACL5E,UAAWC,KAAO2H,YAClBH,YAAY,UACZ9H,MAAOoF,EAASD,QAChB4C,SAAUrC,EACVsC,UAAQ,IAEXxC,GACG,yBAAKnF,UAAWC,KAAO4H,eAClB1C,GAGT,kBAAC,GAAD,CACI5E,KAAM0E,EAAe,aAAe,eACpCR,KAAK,SACLD,SAAUS,SCrLvB6C,OAff,WACE,OACI,yBAAK9H,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,GAAD,MACA,kBAAC,EAAD,QCNY+H,QACW,cAA7BZ,OAAOa,SAASC,UAEe,UAA7Bd,OAAOa,SAASC,UAEhBd,OAAOa,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDiIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAtC,GACLtC,QAAQsC,MAAMA,EAAM1B,a,mBEhJ5BxF,EAAOC,QAAU,CAAC,YAAc,4BAA4B,UAAY,0BAA0B,OAAS,yB,mBCA3GD,EAAOC,QAAU,CAAC,cAAgB,gCAAgC,UAAY,4BAA4B,SAAW,6B,mBCArHD,EAAOC,QAAU,CAAC,IAAM,oBAAoB,SAAW,4B","file":"static/js/main.7239fed2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Title_title__PW5FM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3tGbB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Contacts_btn__2tieE\",\"contactsBlock\":\"Contacts_contactsBlock__c2H6k\",\"container\":\"Contacts_container__cxOMX\",\"form\":\"Contacts_form__3Hgqc\",\"disabled\":\"Contacts_disabled__1bOU-\",\"formArea\":\"Contacts_formArea__mkM3v\",\"messageArea\":\"Contacts_messageArea__1Yfl5\",\"statusMessage\":\"Contacts_statusMessage__3XZDe\",\"error\":\"Contacts_error__141a6\",\"success\":\"Contacts_success__2MujU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainBlock\":\"Main_mainBlock__3zH0h\",\"particles\":\"Main_particles__2rCQt\",\"container\":\"Main_container__HB-58\",\"greeting\":\"Main_greeting__wQIs6\",\"photo\":\"Main_photo__1LNM5\",\"image\":\"Main_image__bg_yQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"skill\":\"Skill_skill__1zAEQ\",\"imgWrap\":\"Skill_imgWrap__34T8l\",\"icon\":\"Skill_icon__H73tX\",\"skillInfo\":\"Skill_skillInfo__2OwXz\",\"skillTitle\":\"Skill_skillTitle__15M5O\",\"description\":\"Skill_description__1W30s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"project\":\"Project_project__YX5v6\",\"image\":\"Project_image__3wiLe\",\"viewBtn\":\"Project_viewBtn__3hITD\",\"projectInfo\":\"Project_projectInfo__2w8lz\",\"projectTitle\":\"Project_projectTitle__1D0Z9\",\"description\":\"Project_description__32iBK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"burgerNav\":\"BurgerNav_burgerNav__Ig5tx\",\"burgerNavItems\":\"BurgerNav_burgerNavItems__1fK_N\",\"active\":\"BurgerNav_active__2X7ZL\",\"show\":\"BurgerNav_show__2xSiL\",\"burgerBtn\":\"BurgerNav_burgerBtn__3fWW9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__cUqpv\",\"container\":\"Footer_container__-mPw-\",\"socialIcons\":\"Footer_socialIcons__2IG9h\",\"socialIcon\":\"Footer_socialIcon__2KHUe\",\"copyright\":\"Footer_copyright__16ulr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__15Nuu\",\"active\":\"Nav_active__3lakz\"};","import React from 'react';\r\nimport styles from './Main.module.scss';\r\nimport Particles from 'react-particles-js';\r\nimport Fade from 'react-reveal/Fade';\r\nimport ReactTypingEffect from 'react-typing-effect';\r\nimport Tilt from 'react-tilt';\r\n\r\nconst particlesOptions = {\r\n    particles: {\r\n        number: {\r\n            value: 80,\r\n            density: {\r\n                enable: true,\r\n                value_area: 800\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n\r\nfunction Main() {\r\n    return (\r\n        <div className={styles.mainBlock}>\r\n            <Particles className={styles.particles} params={particlesOptions}/>\r\n            <Fade top>\r\n                <div className={styles.container}>\r\n                    <div className={styles.greeting}>\r\n                        <span>Hi There</span>\r\n                        <span>I am Denis <span>Gerasimenko</span></span>\r\n                        {/*<h1>Frontend Developer.</h1>*/}\r\n                        <ReactTypingEffect\r\n                            text='Frontend Developer.'\r\n                        />\r\n                    </div>\r\n                    <Tilt className=\"Tilt\" options={{ max : 25 }} >\r\n                        <div className={styles.photo}>\r\n                            <div className={styles.image}>\r\n                            </div>\r\n                        </div>\r\n                    </Tilt>\r\n\r\n                </div>\r\n            </Fade>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Main;","import React from 'react';\r\nimport styles from './Skill.module.scss';\r\n\r\n\r\nfunction Skill(props) {\r\n    return (\r\n        <div className={styles.skill}>\r\n            <div className={styles.imgWrap}>\r\n                <img src={props.skillIcon} className={styles.icon} />\r\n            </div>\r\n\r\n            <div className={styles.skillInfo}>\r\n            <h3 className={styles.skillTitle}>{props.title}</h3>\r\n            <span className={styles.description}>{props.description}</span>\r\n        </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Skill;","import React from 'react';\r\nimport style from './Title.module.scss';\r\n\r\n\r\n\r\nfunction Title(props) {\r\n    return (<h2 className={style.title}>{props.text}</h2>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default Title;","import React from 'react';\r\nimport styles from './Skills.module.scss';\r\nimport Skill from \"./skill/Skill\";\r\nimport Title from \"../common/components/title/Title\";\r\n// Placeholder skill icons - replace with your actual SVG icons\r\n// import jsImage from '../img/js-file.svg'\r\n// import reactImage from '../img/react.svg'\r\n// import htmlImage from '../img/html.svg'\r\n\r\n// Using placeholder icon URLs for now\r\nconst jsImage = 'https://cdn.jsdelivr.net/gh/devicons/devicon/icons/javascript/javascript-original.svg';\r\nconst reactImage = 'https://cdn.jsdelivr.net/gh/devicons/devicon/icons/react/react-original.svg';\r\nconst htmlImage = 'https://cdn.jsdelivr.net/gh/devicons/devicon/icons/html5/html5-original.svg';\r\n\r\n\r\nfunction Skills() {\r\n    // const js = {\r\n    //     backgroundImage: 'url(' + jsImage + ')',\r\n    // };\r\n    // const react = {\r\n    //     backgroundImage: 'url(' + reactImage + ')',\r\n    // };\r\n    // const html = {\r\n    //     backgroundImage: 'url(' + htmlImage + ')',\r\n    // };\r\n\r\n\r\n    return (\r\n        <div id='skills' className={styles.skillsBlock}>\r\n            <div className={styles.container}>\r\n                <Title text={'Skills'}/>\r\n                <div className={styles.skills}>\r\n                    <Skill title={'JS'}\r\n                           description={'sed do eiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim...'}\r\n                           skillIcon={jsImage}/>\r\n                    <Skill title={'HTML&CSS'}\r\n                           description={'sed do eiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim.'}\r\n                           skillIcon={reactImage}/>\r\n                    <Skill title={'React'}\r\n                           description={'sed do eiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim.'}\r\n                           skillIcon={htmlImage}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Skills;","import React from 'react';\r\nimport styles from './Project.module.scss';\r\n\r\n\r\nfunction Project(props) {\r\n    return (\r\n        <div className={styles.project}>\r\n            <div className={styles.image} style={props.style}>\r\n                <a href={props.items}  className={styles.viewBtn}>View</a>\r\n            </div>\r\n            <div className={styles.projectInfo}>\r\n            <h3 className={styles.projectTitle}>{props.title}</h3>\r\n            <span className={styles.description}>{props.description}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Project;","import React from 'react';\r\nimport styles from './Projects.module.scss';\r\nimport Project from \"./Project/Project\";\r\nimport Title from \"../common/components/title/Title\";\r\n// Placeholder images - replace with your actual project images\r\n// import snImage from '../img/social-network2.jpg'\r\n// import cdsImage from '../img/cards3.png'\r\n// import tdlImage from '../img/todo-list.png'\r\n\r\n// Using placeholder URLs for now\r\nconst snImage = 'https://via.placeholder.com/400x250/667eea/ffffff?text=Social+Network';\r\nconst cdsImage = 'https://via.placeholder.com/400x250/764ba2/ffffff?text=Cards+Project';\r\nconst tdlImage = 'https://via.placeholder.com/400x250/f093fb/ffffff?text=Todo+List';\r\n\r\n\r\nfunction Projects() {\r\n\r\n    const social = {\r\n        backgroundImage: 'url(' + snImage + ')',\r\n    };\r\n    const cards = {\r\n        backgroundImage: 'url(' + cdsImage + ')',\r\n    };\r\n    const list = {\r\n        backgroundImage: 'url(' + tdlImage + ')',\r\n    };\r\n\r\n    const socialLink = 'https://denisgerasimenko.github.io/social_network/'\r\n\r\n    const cardsLink = 'https://grok88.github.io/cards_project/'\r\n\r\n    const listLink = 'https://denisgerasimenko.github.io/todolist/'\r\n\r\n    return (\r\n        <div id='projects' className={styles.projectsBlock}>\r\n            <div className={styles.container}>\r\n                <Title text={'Projects'}/>\r\n                <div className={styles.projects}>\r\n                    <Project title={'Social Network'}\r\n                             description={'sed do eiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim...'}\r\n                             style={social}\r\n                             items={socialLink}/>\r\n                    <Project title={'Cards'}\r\n                             description={'sed do eiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim.'}\r\n                             style={cards}\r\n                             items={cardsLink}/>\r\n                    <Project title={'Todolist'}\r\n                             description={'sed do eiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim.'}\r\n                             style={list}\r\n                             items={listLink}/>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Projects;","import React from 'react';\r\nimport styles from './Footer.module.scss';\r\nimport Title from '../common/components/title/Title';\r\n// Placeholder social media icon - replace with your actual SVG icon\r\n// import linkedinIcon from '../img/linkedin.svg'\r\n\r\n// Using placeholder icon URL for now\r\nconst linkedinIcon = 'https://cdn.jsdelivr.net/gh/devicons/devicon/icons/linkedin/linkedin-original.svg';\r\n\r\nfunction Footer() {\r\n    return (\r\n        <div className={styles.footer}>\r\n            <div className={styles.container}>\r\n                <Title text={'Denis Gerasimenko'}/>\r\n                <div className={styles.socialIcons}>\r\n                    <div className={styles.socialIcon}>\r\n                    <a href='https://www.linkedin.com/in/denis-gerasimenko-59a293201/'>\r\n                        <img src={linkedinIcon} alt=''/>\r\n                    </a>\r\n                    </div>\r\n                </div>\r\n                <span className={styles.copyright}> All Rights Reserved.</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Footer;","import React from 'react';\r\nimport style from './Nav.module.scss';\r\nimport {Link} from \"react-scroll\";\r\n\r\nfunction Nav() {\r\n    return (\r\n        <div className={style.nav}>\r\n            <a href=\"\">Main</a>\r\n            {/*<a href=\"\">Skills</a>*/}\r\n            <Link\r\n                activeClass={style.active}\r\n                to=\"skills\"\r\n                spy={true}\r\n                smooth={true}\r\n                offset={0}\r\n                duration={500}\r\n            >Skills</Link>\r\n            {/*<a href=\"#projects\">Projects</a>*/}\r\n            <Link\r\n                activeClass={style.active}\r\n                to=\"projects\"\r\n                spy={true}\r\n                smooth={true}\r\n                offset={0}\r\n                duration={500}\r\n            >Projects</Link>\r\n            {/*<a href=\"\">Contacts</a>*/}\r\n            <Link\r\n                activeClass={style.active}\r\n                to='contacts'\r\n                spy={true}\r\n                smooth={true}\r\n                offset={0}\r\n                duration={500}\r\n            >Contacts</Link>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Nav;","import React, {useState} from 'react';\r\nimport style from './BurgerNav.module.scss';\r\nimport {Link} from \"react-scroll\";\r\n\r\nfunction BurgerNav() {\r\n    const [menuIsOpen, setBurgerMenu] = useState(false);\r\n    let onBurgerBtnClick = () => {\r\n        setBurgerMenu(!menuIsOpen);\r\n        console.log(menuIsOpen)\r\n    };\r\n\r\n    return (\r\n        <div className={style.burgerNav}>\r\n            <div className={menuIsOpen ? `${style.burgerNavItems} ${style.show}` : style.burgerNavItems}>\r\n                <a href=\"\">Main</a>\r\n                <a href=\"\">Skills</a>\r\n                {/*<a href=\"#projects\">Projects</a>*/}\r\n                <Link\r\n                    activeClass={style.active}\r\n                    to=\"projects\"\r\n                    spy={true}\r\n                    smooth={true}\r\n                    offset={0}\r\n                    duration={500}\r\n                >Projects</Link>\r\n                <a href=\"\">Contacts</a>\r\n\r\n            </div>\r\n            <div onClick={onBurgerBtnClick} className={style.burgerBtn}>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default BurgerNav;","import React from 'react';\r\nimport styles from './Header.module.scss';\r\nimport Nav from \"./nav/Nav\";\r\nimport BurgerNav from \"./burgerNav/BurgerNav\";\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className={styles.header}>\r\n            <Nav/>\r\n            <BurgerNav/>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Header;","import React from \"react\";\r\nimport style from './Button.module.scss'\r\n\r\n\r\nfunction Button({ text, disabled = false, type = \"button\", ...props }){\r\n    if (type === \"submit\" || props.onClick) {\r\n        return(\r\n            <button \r\n                type={type}\r\n                className={`${style.btn} ${disabled ? style.disabled : ''}`}\r\n                disabled={disabled}\r\n                {...props}\r\n            >\r\n                {text}\r\n            </button>\r\n        );\r\n    }\r\n    \r\n    return(\r\n        <a href=\"\" className={style.btn} {...props}>{text}</a>\r\n    );\r\n}\r\n\r\nexport default Button;","import React, { useState } from \"react\";\r\nimport styles from './Contacts.module.scss';\r\nimport Title from '../common/components/title/Title';\r\nimport Button from \"../common/components/button/Button\";\r\nimport Fade from \"react-reveal/Fade\";\r\n\r\n\r\nfunction Contacts() {\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        email: '',\r\n        message: ''\r\n    });\r\n    const [isSubmitting, setIsSubmitting] = useState(false);\r\n    const [submitStatus, setSubmitStatus] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData(prev => ({\r\n            ...prev,\r\n            [name]: value\r\n        }));\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        \r\n        // Basic validation\r\n        if (!formData.name || !formData.email || !formData.message) {\r\n            setSubmitStatus('Please fill in all fields');\r\n            return;\r\n        }\r\n\r\n        // Email validation\r\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n        if (!emailRegex.test(formData.email)) {\r\n            setSubmitStatus('Please enter a valid email address');\r\n            return;\r\n        }\r\n\r\n        setIsSubmitting(true);\r\n        setSubmitStatus('Sending...');\r\n\r\n        try {\r\n            // Method 1: Web3Forms (Priority service - most reliable)\r\n            const web3FormData = new FormData();\r\n            web3FormData.append('access_key', '317dacc2-3636-4862-adbf-e57270c995e2'); // Working demo key\r\n            web3FormData.append('name', formData.name);\r\n            web3FormData.append('email', formData.email);\r\n            web3FormData.append('message', formData.message);\r\n            web3FormData.append('subject', `Portfolio Contact from ${formData.name}`);\r\n            web3FormData.append('from_name', 'Portfolio Contact Form');\r\n            \r\n            const web3Response = await fetch('https://api.web3forms.com/submit', {\r\n                method: 'POST',\r\n                body: web3FormData\r\n            });\r\n\r\n            const web3Result = await web3Response.json();\r\n            console.log('Web3Forms Response:', web3Result); // Debug logging\r\n\r\n            if (web3Result.success) {\r\n                setSubmitStatus('Message sent successfully via Web3Forms! Thank you for contacting me.');\r\n                setFormData({ name: '', email: '', message: '' });\r\n                setIsSubmitting(false);\r\n                setTimeout(() => setSubmitStatus(''), 5000);\r\n                return; // Exit here - email sent successfully\r\n            } else {\r\n                console.error('Web3Forms failed with error:', web3Result.message);\r\n                // Continue to next service instead of showing error immediately\r\n            }\r\n        } catch (web3Error) {\r\n            console.error('Web3Forms network error:', web3Error);\r\n            // Continue to backup services\r\n        }\r\n\r\n        // Method 2: FormSubmit (reliable backup - no signup required)\r\n        try {\r\n            const formsubmitData = new FormData();\r\n            formsubmitData.append('name', formData.name);\r\n            formsubmitData.append('email', formData.email);\r\n            formsubmitData.append('message', `From: ${formData.name} (${formData.email})\\n\\nMessage:\\n${formData.message}`);\r\n            formsubmitData.append('_subject', `Portfolio Contact from ${formData.name}`);\r\n            formsubmitData.append('_captcha', 'false'); // Disable captcha\r\n            formsubmitData.append('_template', 'table'); // Use table template\r\n            \r\n            const formsubmitResponse = await fetch('https://formsubmit.co/gerasimenkodenis7@gmail.com', {\r\n                method: 'POST',\r\n                body: formsubmitData\r\n            });\r\n\r\n            if (formsubmitResponse.ok) {\r\n                setSubmitStatus('Message sent successfully via FormSubmit! Thank you for contacting me.');\r\n                setFormData({ name: '', email: '', message: '' });\r\n                setIsSubmitting(false);\r\n                setTimeout(() => setSubmitStatus(''), 5000);\r\n                return; // Exit here - email sent successfully\r\n            }\r\n            \r\n            console.log('FormSubmit response status:', formsubmitResponse.status);\r\n        } catch (formsubmitError) {\r\n            console.error('FormSubmit error:', formsubmitError);\r\n        }\r\n\r\n        try {\r\n            // Method 2: Getform (Alternative reliable service)\r\n            const getformData = new FormData();\r\n            getformData.append('name', formData.name);\r\n            getformData.append('email', formData.email);\r\n            getformData.append('message', formData.message);\r\n            \r\n            const getformResponse = await fetch('https://getform.io/f/arolgoqa', {\r\n                method: 'POST',\r\n                body: getformData\r\n            });\r\n\r\n            if (getformResponse.ok) {\r\n                setSubmitStatus('Message sent successfully via secondary service! Thank you for contacting me.');\r\n                setFormData({ name: '', email: '', message: '' });\r\n                setIsSubmitting(false);\r\n                setTimeout(() => setSubmitStatus(''), 5000);\r\n                return;\r\n            }\r\n        } catch (getformError) {\r\n            console.error('Getform error:', getformError);\r\n        }\r\n\r\n        try {\r\n            // Method 3: Formspree (requires verification but reliable)\r\n            const formspreeData = new FormData();\r\n            formspreeData.append('name', formData.name);\r\n            formspreeData.append('email', formData.email);\r\n            formspreeData.append('message', formData.message);\r\n            formspreeData.append('_replyto', formData.email);\r\n            formspreeData.append('_subject', `Portfolio Contact from ${formData.name}`);\r\n            \r\n            const formspreeResponse = await fetch('https://formspree.io/f/xwpeqvea', {\r\n                method: 'POST',\r\n                body: formspreeData\r\n            });\r\n\r\n            if (formspreeResponse.ok) {\r\n                setSubmitStatus('Message sent successfully via third service! Thank you for contacting me.');\r\n                setFormData({ name: '', email: '', message: '' });\r\n                setIsSubmitting(false);\r\n                setTimeout(() => setSubmitStatus(''), 5000);\r\n                return;\r\n            }\r\n        } catch (formspreeError) {\r\n            console.error('Formspree error:', formspreeError);\r\n        }\r\n\r\n        // Final fallback: mailto (all services failed)\r\n        console.warn('All email services failed, using mailto fallback');\r\n        const subject = `Portfolio Contact from ${formData.name}`;\r\n        const body = `Hi Denis,\\n\\nYou have received a new message from your portfolio website:\\n\\nName: ${formData.name}\\nEmail: ${formData.email}\\n\\nMessage:\\n${formData.message}\\n\\nBest regards,\\n${formData.name}`;\r\n        const mailtoLink = `mailto:gerasimenkodenis7@gmail.com?subject=${encodeURIComponent(subject)}&body=${encodeURIComponent(body)}`;\r\n        \r\n        window.open(mailtoLink, '_blank');\r\n        setSubmitStatus('All email services temporarily unavailable. Your email client has been opened. Please send manually.');\r\n        setFormData({ name: '', email: '', message: '' });\r\n        \r\n        setIsSubmitting(false);\r\n        setTimeout(() => setSubmitStatus(''), 8000);\r\n    };\r\n\r\n    return (\r\n        <div id='contacts' className={styles.contactsBlock}>\r\n            <div className={styles.container}>\r\n                <Title text={'Contacts'}/>\r\n                <Fade>\r\n                    <form className={styles.form} onSubmit={handleSubmit}>\r\n                        <input \r\n                            type=\"text\" \r\n                            name=\"name\"\r\n                            className={styles.formArea} \r\n                            placeholder='Name'\r\n                            value={formData.name}\r\n                            onChange={handleInputChange}\r\n                            required\r\n                        />\r\n                        <input \r\n                            type=\"email\" \r\n                            name=\"email\"\r\n                            className={styles.formArea} \r\n                            placeholder='E-mail'\r\n                            value={formData.email}\r\n                            onChange={handleInputChange}\r\n                            required\r\n                        />\r\n                        <textarea \r\n                            name=\"message\"\r\n                            className={styles.messageArea} \r\n                            placeholder='Message'\r\n                            value={formData.message}\r\n                            onChange={handleInputChange}\r\n                            required\r\n                        />\r\n                        {submitStatus && (\r\n                            <div className={styles.statusMessage}>\r\n                                {submitStatus}\r\n                            </div>\r\n                        )}\r\n                        <Button \r\n                            text={isSubmitting ? 'Sending...' : 'Send Message'} \r\n                            type=\"submit\"\r\n                            disabled={isSubmitting}\r\n                        />\r\n                    </form>\r\n                </Fade>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Contacts;","import React from 'react';\r\nimport './App.scss';\r\nimport Main from \"./main/Main\";\r\nimport Skills from \"./skills/Skills\";\r\nimport Projects from \"./Projects/Projects\";\r\nimport Footer from \"./footer/Footer\";\r\nimport Header from \"./header/Header\";\r\nimport Contacts from \"./contacts/Contacts\";\r\n\r\n\r\nfunction App() {\r\n  return (\r\n      <div className='App'>\r\n        <Header/>\r\n        <Main/>\r\n        <Skills/>\r\n        <Projects/>\r\n        <Contacts/>\r\n        <Footer/>\r\n      </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"skillsBlock\":\"Skills_skillsBlock__3AAWZ\",\"container\":\"Skills_container__1kY4N\",\"skills\":\"Skills_skills__29AHO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"projectsBlock\":\"Projects_projectsBlock__1Oew7\",\"container\":\"Projects_container__1RxkN\",\"projects\":\"Projects_projects__UQ68N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__366T0\",\"disabled\":\"Button_disabled__3J8yQ\"};"],"sourceRoot":""}